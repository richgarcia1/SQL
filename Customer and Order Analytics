-- This project utilizes a database with multiple tables.  I am querying the database to quantify statistics about customer ansd order data

-- The database is large and not practical to include below, here is a link to find it on dropbox: https://www.dropbox.com/s/cvsasmtr8syq2c2/BIT_DB?dl=0



1. How many many unique orders were placed in January? In other words, how many distinct order ids do we have? 

-- displays how many unique orders placed in january

SELECT COUNT(DISTINCT orderID) AS unique_orders
FROM BIT_DB.JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID'
;



2. How many of those orders were for an iPhone?

-- displays january iphone orders

SELECT COUNT(DISTINCT orderID) AS jan_iphone_orders
FROM BIT_DB.JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone'
;
 


3. Select the customer account numbers for all the orders that were placed in February.

-- displays customer account numbers for all orders in febuaary

SELECT DISTINCT acctnum 
FROM BIT_DB.customers AS cust
INNER JOIN BIT_DB.FebSales AS feb
ON cust.order_id = feb.orderID
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID' 
;



4. Which product was the cheapest one sold in January, and what was the price?

-- displays lowest sold item and price

SELECT Product, price
FROM BIT_DB.JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID'
ORDER BY price ASC LIMIT 1 
;



5. What is the total revenue for each product sold in January? 

-- displays total revenue for each product sold in january

SELECT ROUND(SUM(Quantity) * price, 2) AS revenue, Product   
FROM BIT_DB.JanSales 
GROUP BY Product
; 



6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

-- displays order details for 548 lincoln st

SELECT Product, SUM(Quantity) AS Quantity, ROUND(SUM(Quantity), 2) * price AS total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product
;



7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

-- displays febuary orders of more than 2 products and the average amount spent per customer

SELECT COUNT(DISTINCT acctnum) AS customers, ROUND(AVG(Quantity * price), 2) AS average_spent
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON feb.orderID = cust.order_id 
WHERE Quantity > 2
AND LENGTH(orderid) = 6 
AND orderid <> 'Order ID';
;



8. List all the products sold in Los Angeles in February, and include how many of each were sold.

-- displays all products and how many sold in los angelos in february

SELECT Product, SUM(Quantity) AS Quantity
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product
;



9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

-- displays how many orders in new york with at least 3 orders in january

SELECT DISTINCT location, COUNT(orderID) AS order_amount
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(Quantity) >=3
;



10. How many of each type of headphone were sold in February?

-- displays each type of headphone sold in february

SELECT Product, SUM(Quantity) AS total_quantity_sold
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones%'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID' 
GROUP BY Product
;



11. What was the average amount spent per account in February?

-- displays average amount spent per number of accounts in february

SELECT ROUND(AVG(Quantity * price), 2) AS avg_amount_spent
FROM BIT_DB.FebSales feb
LEFT JOIN customers cust ON feb.orderID = cust.order_id
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID' 
;



12. What was the average quantity of products purchased per account in February?

-- displays average quantity of products purchased per account in february

SELECT SUM(Quantity) / COUNT(cust.acctnum) AS avg_quantity_purchased
FROM BIT_DB.FebSales feb
LEFT JOIN customers cust ON feb.orderID = cust.order_id
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID' 
;



13. Which product brought in the most revenue in January and how much revenue did it bring in total?

-- displays how much and which product had the most revenue in january 

SELECT Product, SUM(Quantity * price) AS total_revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity * price) DESC 
LIMIT 1
;
